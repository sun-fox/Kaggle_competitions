{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "train = pd.read_table(\"train.csv\",sep=\",\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RMSD</th>\n",
       "      <th>F1</th>\n",
       "      <th>F2</th>\n",
       "      <th>F3</th>\n",
       "      <th>F4</th>\n",
       "      <th>F5</th>\n",
       "      <th>F6</th>\n",
       "      <th>F7</th>\n",
       "      <th>F8</th>\n",
       "      <th>F9</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>17.284</td>\n",
       "      <td>13558.30</td>\n",
       "      <td>4305.35</td>\n",
       "      <td>0.31754</td>\n",
       "      <td>162.1730</td>\n",
       "      <td>1.872791e+06</td>\n",
       "      <td>215.3590</td>\n",
       "      <td>4287.87</td>\n",
       "      <td>102</td>\n",
       "      <td>27.0302</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>6.021</td>\n",
       "      <td>6191.96</td>\n",
       "      <td>1623.16</td>\n",
       "      <td>0.26213</td>\n",
       "      <td>53.3894</td>\n",
       "      <td>8.034467e+05</td>\n",
       "      <td>87.2024</td>\n",
       "      <td>3328.91</td>\n",
       "      <td>39</td>\n",
       "      <td>38.5468</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>9.275</td>\n",
       "      <td>7725.98</td>\n",
       "      <td>1726.28</td>\n",
       "      <td>0.22343</td>\n",
       "      <td>67.2887</td>\n",
       "      <td>1.075648e+06</td>\n",
       "      <td>81.7913</td>\n",
       "      <td>2981.04</td>\n",
       "      <td>29</td>\n",
       "      <td>38.8119</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>15.851</td>\n",
       "      <td>8424.58</td>\n",
       "      <td>2368.25</td>\n",
       "      <td>0.28111</td>\n",
       "      <td>67.8325</td>\n",
       "      <td>1.210472e+06</td>\n",
       "      <td>109.4390</td>\n",
       "      <td>3248.22</td>\n",
       "      <td>70</td>\n",
       "      <td>39.0651</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>7.962</td>\n",
       "      <td>7460.84</td>\n",
       "      <td>1736.94</td>\n",
       "      <td>0.23280</td>\n",
       "      <td>52.4123</td>\n",
       "      <td>1.021020e+06</td>\n",
       "      <td>94.5234</td>\n",
       "      <td>2814.42</td>\n",
       "      <td>41</td>\n",
       "      <td>39.9147</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>29996</td>\n",
       "      <td>2.591</td>\n",
       "      <td>9257.79</td>\n",
       "      <td>2768.73</td>\n",
       "      <td>0.29907</td>\n",
       "      <td>91.3902</td>\n",
       "      <td>1.313740e+06</td>\n",
       "      <td>123.4960</td>\n",
       "      <td>3368.21</td>\n",
       "      <td>14</td>\n",
       "      <td>36.7691</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>29997</td>\n",
       "      <td>1.034</td>\n",
       "      <td>9402.79</td>\n",
       "      <td>1804.98</td>\n",
       "      <td>0.19196</td>\n",
       "      <td>107.6270</td>\n",
       "      <td>1.335660e+06</td>\n",
       "      <td>123.4660</td>\n",
       "      <td>4194.61</td>\n",
       "      <td>49</td>\n",
       "      <td>34.0800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>29998</td>\n",
       "      <td>1.428</td>\n",
       "      <td>15127.00</td>\n",
       "      <td>4397.50</td>\n",
       "      <td>0.29070</td>\n",
       "      <td>211.2770</td>\n",
       "      <td>2.117603e+06</td>\n",
       "      <td>248.1870</td>\n",
       "      <td>5332.01</td>\n",
       "      <td>294</td>\n",
       "      <td>24.2649</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>29999</td>\n",
       "      <td>20.754</td>\n",
       "      <td>18415.20</td>\n",
       "      <td>7557.31</td>\n",
       "      <td>0.41038</td>\n",
       "      <td>209.9870</td>\n",
       "      <td>2.474283e+06</td>\n",
       "      <td>333.6490</td>\n",
       "      <td>5825.95</td>\n",
       "      <td>198</td>\n",
       "      <td>29.2394</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>30000</td>\n",
       "      <td>6.230</td>\n",
       "      <td>13723.40</td>\n",
       "      <td>5168.99</td>\n",
       "      <td>0.37665</td>\n",
       "      <td>157.2620</td>\n",
       "      <td>1.899948e+06</td>\n",
       "      <td>196.6510</td>\n",
       "      <td>5256.69</td>\n",
       "      <td>46</td>\n",
       "      <td>27.5428</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>30001 rows Ã— 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         RMSD        F1       F2       F3        F4            F5        F6  \\\n",
       "0      17.284  13558.30  4305.35  0.31754  162.1730  1.872791e+06  215.3590   \n",
       "1       6.021   6191.96  1623.16  0.26213   53.3894  8.034467e+05   87.2024   \n",
       "2       9.275   7725.98  1726.28  0.22343   67.2887  1.075648e+06   81.7913   \n",
       "3      15.851   8424.58  2368.25  0.28111   67.8325  1.210472e+06  109.4390   \n",
       "4       7.962   7460.84  1736.94  0.23280   52.4123  1.021020e+06   94.5234   \n",
       "...       ...       ...      ...      ...       ...           ...       ...   \n",
       "29996   2.591   9257.79  2768.73  0.29907   91.3902  1.313740e+06  123.4960   \n",
       "29997   1.034   9402.79  1804.98  0.19196  107.6270  1.335660e+06  123.4660   \n",
       "29998   1.428  15127.00  4397.50  0.29070  211.2770  2.117603e+06  248.1870   \n",
       "29999  20.754  18415.20  7557.31  0.41038  209.9870  2.474283e+06  333.6490   \n",
       "30000   6.230  13723.40  5168.99  0.37665  157.2620  1.899948e+06  196.6510   \n",
       "\n",
       "            F7   F8       F9  \n",
       "0      4287.87  102  27.0302  \n",
       "1      3328.91   39  38.5468  \n",
       "2      2981.04   29  38.8119  \n",
       "3      3248.22   70  39.0651  \n",
       "4      2814.42   41  39.9147  \n",
       "...        ...  ...      ...  \n",
       "29996  3368.21   14  36.7691  \n",
       "29997  4194.61   49  34.0800  \n",
       "29998  5332.01  294  24.2649  \n",
       "29999  5825.95  198  29.2394  \n",
       "30000  5256.69   46  27.5428  \n",
       "\n",
       "[30001 rows x 10 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "ename": "ImportError",
     "evalue": "cannot import name 'LinearRegression' from 'sklearn' (C:\\Users\\1999s\\Anaconda3\\lib\\site-packages\\sklearn\\__init__.py)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mImportError\u001b[0m                               Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-4-118520da084a>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[1;32mfrom\u001b[0m \u001b[0msklearn\u001b[0m \u001b[1;32mimport\u001b[0m \u001b[0mLinearRegression\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;31mImportError\u001b[0m: cannot import name 'LinearRegression' from 'sklearn' (C:\\Users\\1999s\\Anaconda3\\lib\\site-packages\\sklearn\\__init__.py)"
     ]
    }
   ],
   "source": [
    "from sklearn import LinearRegression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.linear_model import LinearRegression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RMSD</th>\n",
       "      <th>F1</th>\n",
       "      <th>F2</th>\n",
       "      <th>F3</th>\n",
       "      <th>F4</th>\n",
       "      <th>F5</th>\n",
       "      <th>F6</th>\n",
       "      <th>F7</th>\n",
       "      <th>F8</th>\n",
       "      <th>F9</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>count</td>\n",
       "      <td>30001.000000</td>\n",
       "      <td>30001.000000</td>\n",
       "      <td>30001.000000</td>\n",
       "      <td>30001.000000</td>\n",
       "      <td>30001.000000</td>\n",
       "      <td>3.000100e+04</td>\n",
       "      <td>30001.000000</td>\n",
       "      <td>30001.000000</td>\n",
       "      <td>30001.000000</td>\n",
       "      <td>30001.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>mean</td>\n",
       "      <td>7.697942</td>\n",
       "      <td>9851.588091</td>\n",
       "      <td>3003.787161</td>\n",
       "      <td>0.301801</td>\n",
       "      <td>103.299843</td>\n",
       "      <td>1.365474e+06</td>\n",
       "      <td>145.249444</td>\n",
       "      <td>3986.213546</td>\n",
       "      <td>69.960868</td>\n",
       "      <td>34.539666</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>std</td>\n",
       "      <td>6.087291</td>\n",
       "      <td>4042.792773</td>\n",
       "      <td>1451.928534</td>\n",
       "      <td>0.062803</td>\n",
       "      <td>55.436934</td>\n",
       "      <td>5.618971e+05</td>\n",
       "      <td>69.850407</td>\n",
       "      <td>2030.130189</td>\n",
       "      <td>56.462140</td>\n",
       "      <td>5.966959</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>min</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2783.150000</td>\n",
       "      <td>403.500000</td>\n",
       "      <td>0.092500</td>\n",
       "      <td>10.689100</td>\n",
       "      <td>3.743155e+05</td>\n",
       "      <td>31.970400</td>\n",
       "      <td>1089.190000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>15.228000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>25%</td>\n",
       "      <td>2.299000</td>\n",
       "      <td>6941.190000</td>\n",
       "      <td>1975.960000</td>\n",
       "      <td>0.258210</td>\n",
       "      <td>63.521700</td>\n",
       "      <td>9.534198e+05</td>\n",
       "      <td>94.740400</td>\n",
       "      <td>3166.130000</td>\n",
       "      <td>31.000000</td>\n",
       "      <td>30.505600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>50%</td>\n",
       "      <td>4.976000</td>\n",
       "      <td>8875.290000</td>\n",
       "      <td>2659.680000</td>\n",
       "      <td>0.299460</td>\n",
       "      <td>87.432600</td>\n",
       "      <td>1.235293e+06</td>\n",
       "      <td>125.918000</td>\n",
       "      <td>3837.700000</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>35.293200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>75%</td>\n",
       "      <td>13.294000</td>\n",
       "      <td>12077.800000</td>\n",
       "      <td>3766.820000</td>\n",
       "      <td>0.341980</td>\n",
       "      <td>133.425000</td>\n",
       "      <td>1.683858e+06</td>\n",
       "      <td>180.731000</td>\n",
       "      <td>4635.960000</td>\n",
       "      <td>91.000000</td>\n",
       "      <td>38.869500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>max</td>\n",
       "      <td>20.999000</td>\n",
       "      <td>38042.200000</td>\n",
       "      <td>15312.000000</td>\n",
       "      <td>0.577690</td>\n",
       "      <td>369.317000</td>\n",
       "      <td>5.050786e+06</td>\n",
       "      <td>594.790000</td>\n",
       "      <td>105948.170000</td>\n",
       "      <td>348.000000</td>\n",
       "      <td>48.202800</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               RMSD            F1            F2            F3            F4  \\\n",
       "count  30001.000000  30001.000000  30001.000000  30001.000000  30001.000000   \n",
       "mean       7.697942   9851.588091   3003.787161      0.301801    103.299843   \n",
       "std        6.087291   4042.792773   1451.928534      0.062803     55.436934   \n",
       "min        0.000000   2783.150000    403.500000      0.092500     10.689100   \n",
       "25%        2.299000   6941.190000   1975.960000      0.258210     63.521700   \n",
       "50%        4.976000   8875.290000   2659.680000      0.299460     87.432600   \n",
       "75%       13.294000  12077.800000   3766.820000      0.341980    133.425000   \n",
       "max       20.999000  38042.200000  15312.000000      0.577690    369.317000   \n",
       "\n",
       "                 F5            F6             F7            F8            F9  \n",
       "count  3.000100e+04  30001.000000   30001.000000  30001.000000  30001.000000  \n",
       "mean   1.365474e+06    145.249444    3986.213546     69.960868     34.539666  \n",
       "std    5.618971e+05     69.850407    2030.130189     56.462140      5.966959  \n",
       "min    3.743155e+05     31.970400    1089.190000      0.000000     15.228000  \n",
       "25%    9.534198e+05     94.740400    3166.130000     31.000000     30.505600  \n",
       "50%    1.235293e+06    125.918000    3837.700000     54.000000     35.293200  \n",
       "75%    1.683858e+06    180.731000    4635.960000     91.000000     38.869500  \n",
       "max    5.050786e+06    594.790000  105948.170000    348.000000     48.202800  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "lr = LinearRegression()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "Y = train.RMSD"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "X = train.drop(['RMSD'],axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=False)"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lr.fit(X,Y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = lr.predict(pd.read_csv(\"test.csv\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [],
   "source": [
    "sub = pd.read_csv('./sample_submission.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [],
   "source": [
    "sub.RMSD = df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [],
   "source": [
    "sub.to_csv('ans.csv',index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
